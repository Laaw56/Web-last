@page "/employees"
@attribute [Authorize(Roles = "Employee, Admin")]

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using ValidationOrders.Data
@implements IAsyncDisposable
@inject IDbContextFactory<ValidationOrders.Data.ApplicationDbContext> DbFactory

<PageTitle>Сотрудники</PageTitle>

<h1>Сотрудники</h1>

<p>
    <a href="employees/create">Добавить</a>
</p>

<QuickGrid Class="table" Items="context.Employees">
    <PropertyColumn Property="employee => employee.LastName" Title="Фамилия" />
    <PropertyColumn Property="employee => employee.FirstName" Title="Имя" />
    <PropertyColumn Property="employee => employee.MiddleName" Title="Отчество" />
    <PropertyColumn Property="employee => employee.Position" Title="Должность" />
    <PropertyColumn Property="employee => employee.Division" Title="Подразделение" />
    <PropertyColumn Property="employee => employee.EmploymentDate" Title="Дата приема на работу" />

    <TemplateColumn Context="employee">
        <a href="@($"documents?employeeid={employee.Id}")">Документы</a> |
        <a href="@($"employees/edit?id={employee.Id}")">Редактировать</a> |
        <a href="@($"employees/details?id={employee.Id}")">Подробности</a> |
        <a href="@($"employees/delete?id={employee.Id}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
